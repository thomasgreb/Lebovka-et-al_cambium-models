#############################################################################
# Makefile for building: libvleaf
# Generated by qmake (2.01a) (Qt 4.6.4) on: Fri Jun 30 20:19:41 2017
# Project:  libplugin.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQTGRAPHICS -DQT_QT3SUPPORT_LIB -DQT3_SUPPORT -DQT_GUI_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT
CFLAGS        = -g -Wall $(DEFINES)
CXXFLAGS      = -fexceptions -Wall -Wno-write-strings -Wno-unused-parameter -DLIBXML_STATIC -I../lib\libxml2\include -I../lib\libiconv\include -I../lib\libz\include -g -g3 -DQDEBUG -frtti -mthreads -Wall $(DEFINES)
INCPATH       = -I"..\..\..\Qt\4.6.4\include\QtCore" -I"..\..\..\Qt\4.6.4\include\QtGui" -I"..\..\..\Qt\4.6.4\include\Qt3Support" -I"..\..\..\Qt\4.6.4\include" -I"..\..\..\Qt\4.6.4\include\ActiveQt" -I"debug" -I"..\..\..\Qt\4.6.4\mkspecs\win32-g++"
LIB        =        ar -ru
QMAKE         = c:\Qt\4.6.4\bin\qmake.exe
IDC           = c:\Qt\4.6.4\bin\idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = 
COPY          = copy /y
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = del
DEL_DIR       = rmdir
MOVE          = move
CHK_DIR_EXISTS= if not exist
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = debug

####### Files

SOURCES       = cellbase.cpp \
		matrix.cpp \
		output.cpp \
		parameter.cpp \
		parse.cpp \
		random.cpp \
		simplugin.cpp \
		UniqueMessage.cpp \
		vector.cpp \
		wallbase.cpp \
		warning.cpp debug\moc_cellbase.cpp \
		debug\moc_UniqueMessage.cpp
OBJECTS       = debug/cellbase.o \
		debug/matrix.o \
		debug/output.o \
		debug/parameter.o \
		debug/parse.o \
		debug/random.o \
		debug/simplugin.o \
		debug/UniqueMessage.o \
		debug/vector.o \
		debug/wallbase.o \
		debug/warning.o \
		debug/moc_cellbase.o \
		debug/moc_UniqueMessage.o
DIST          = 
QMAKE_TARGET  = vleaf
DESTDIR        = ..\lib\ #avoid trailing-slash linebreak
TARGET         = libvleaf.a
DESTDIR_TARGET = ..\lib\libvleaf.a

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.libplugin.Debug  $(DESTDIR_TARGET)

$(DESTDIR_TARGET):  $(OBJECTS) 
	ar -M < object_script.libvleaf.Debug 


qmake:  FORCE
	@$(QMAKE) -win32 -o Makefile.libplugin.Debug libplugin.pro

dist:
	$(ZIP) vleaf.zip $(SOURCES) $(DIST) libplugin.pro ..\..\..\Qt\4.6.4\mkspecs\qconfig.pri ..\..\..\Qt\4.6.4\mkspecs\features\qt_functions.prf ..\..\..\Qt\4.6.4\mkspecs\features\qt_config.prf ..\..\..\Qt\4.6.4\mkspecs\features\exclusive_builds.prf ..\..\..\Qt\4.6.4\mkspecs\features\default_pre.prf ..\..\..\Qt\4.6.4\mkspecs\features\win32\default_pre.prf ..\..\..\Qt\4.6.4\mkspecs\features\debug.prf ..\..\..\Qt\4.6.4\mkspecs\features\debug_and_release.prf ..\..\..\Qt\4.6.4\mkspecs\features\default_post.prf ..\..\..\Qt\4.6.4\mkspecs\features\win32\default_post.prf ..\..\..\Qt\4.6.4\mkspecs\features\build_pass.prf ..\..\..\Qt\4.6.4\mkspecs\features\staticlib.prf ..\..\..\Qt\4.6.4\mkspecs\features\static.prf ..\..\..\Qt\4.6.4\mkspecs\features\win32\rtti.prf ..\..\..\Qt\4.6.4\mkspecs\features\win32\exceptions.prf ..\..\..\Qt\4.6.4\mkspecs\features\win32\stl.prf ..\..\..\Qt\4.6.4\mkspecs\features\warn_on.prf ..\..\..\Qt\4.6.4\mkspecs\features\qt.prf ..\..\..\Qt\4.6.4\mkspecs\features\win32\thread.prf ..\..\..\Qt\4.6.4\mkspecs\features\moc.prf ..\..\..\Qt\4.6.4\mkspecs\features\win32\windows.prf ..\..\..\Qt\4.6.4\mkspecs\features\resources.prf ..\..\..\Qt\4.6.4\mkspecs\features\uic.prf ..\..\..\Qt\4.6.4\mkspecs\features\yacc.prf ..\..\..\Qt\4.6.4\mkspecs\features\lex.prf ..\..\..\Qt\4.6.4\mkspecs\features\include_source_dir.prf  HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) debug\cellbase.o debug\matrix.o debug\output.o debug\parameter.o debug\parse.o debug\random.o debug\simplugin.o debug\UniqueMessage.o debug\vector.o debug\wallbase.o debug\warning.o debug\moc_cellbase.o debug\moc_UniqueMessage.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.libplugin.Debug

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_cellbase.cpp debug/moc_UniqueMessage.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug\moc_cellbase.cpp debug\moc_UniqueMessage.cpp
debug/moc_cellbase.cpp: vector.h \
		sqr.h \
		parameter.h \
		wall.h \
		wallbase.h \
		warning.h \
		cellbase.h
	C:\Qt\4.6.4\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 cellbase.h -o debug\moc_cellbase.cpp

debug/moc_UniqueMessage.cpp: UniqueMessage.h
	C:\Qt\4.6.4\bin\moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 UniqueMessage.h -o debug\moc_UniqueMessage.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 



####### Compile

debug/cellbase.o: cellbase.cpp nodeitem.h \
		simitembase.h \
		node.h \
		vector.h \
		sqr.h \
		random.h \
		parameter.h \
		cell.h \
		wall.h \
		wallbase.h \
		warning.h \
		cellbase.h \
		modelelement.h \
		Neighbor.h \
		cellitem.h \
		qcanvasarrow.h \
		nodeset.h \
		mesh.h \
		simplugin.h \
		tiny.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\cellbase.o cellbase.cpp

debug/matrix.o: matrix.cpp vector.h \
		sqr.h \
		matrix.h \
		tiny.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\matrix.o matrix.cpp

debug/output.o: output.cpp warning.h \
		parameter.h \
		vector.h \
		sqr.h \
		output.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\output.o output.cpp

debug/parameter.o: parameter.cpp parameter.h \
		vector.h \
		sqr.h \
		output.h \
		parse.h \
		xmlwrite.h \
		warning.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\parameter.o parameter.cpp

debug/parse.o: parse.cpp warning.h \
		parse.h \
		output.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\parse.o parse.cpp

debug/random.o: random.cpp random.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\random.o random.cpp

debug/simplugin.o: simplugin.cpp simplugin.h \
		cellbase.h \
		vector.h \
		sqr.h \
		parameter.h \
		wall.h \
		wallbase.h \
		warning.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\simplugin.o simplugin.cpp

debug/UniqueMessage.o: UniqueMessage.cpp UniqueMessage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\UniqueMessage.o UniqueMessage.cpp

debug/vector.o: vector.cpp sqr.h \
		pi.h \
		vector.h \
		tiny.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\vector.o vector.cpp

debug/wallbase.o: wallbase.cpp wall.h \
		wallbase.h \
		vector.h \
		sqr.h \
		node.h \
		random.h \
		parameter.h \
		cell.h \
		warning.h \
		cellbase.h \
		modelelement.h \
		Neighbor.h \
		mesh.h \
		simplugin.h \
		wallitem.h \
		simitembase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\wallbase.o wallbase.cpp

debug/warning.o: warning.cpp warning.h \
		canvas.h \
		simitembase.h \
		mainbase.h \
		mesh.h \
		cell.h \
		vector.h \
		sqr.h \
		parameter.h \
		wall.h \
		wallbase.h \
		cellbase.h \
		node.h \
		random.h \
		modelelement.h \
		Neighbor.h \
		simplugin.h \
		cellitem.h \
		infobar.h \
		nodeitem.h \
		data_plot.h \
		curvecolors.h \
		UniqueMessage.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\warning.o warning.cpp

debug/moc_cellbase.o: debug/moc_cellbase.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_cellbase.o debug\moc_cellbase.cpp

debug/moc_UniqueMessage.o: debug/moc_UniqueMessage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o debug\moc_UniqueMessage.o debug\moc_UniqueMessage.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

